{"name": "test_offer_details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome=116.0.5845.179); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n\tGetHandleVerifier [0x00F737C3+48947]\n\t(No symbol) [0x00F08551]\n\t(No symbol) [0x00E0C92D]\n\t(No symbol) [0x00E0FD62]\n\t(No symbol) [0x00E1106A]\n\t(No symbol) [0x00E11110]\n\t(No symbol) [0x00E3E147]\n\t(No symbol) [0x00E3CF4D]\n\t(No symbol) [0x00E3B74B]\n\t(No symbol) [0x00E3ABA5]\n\t(No symbol) [0x00E33420]\n\t(No symbol) [0x00E5508C]\n\t(No symbol) [0x00E32EB6]\n\t(No symbol) [0x00E553E4]\n\t(No symbol) [0x00E675DA]\n\t(No symbol) [0x00E54E86]\n\t(No symbol) [0x00E316C7]\n\t(No symbol) [0x00E3284D]\n\tGetHandleVerifier [0x011BFDF9+2458985]\n\tGetHandleVerifier [0x0120744F+2751423]\n\tGetHandleVerifier [0x01201361+2726609]\n\tGetHandleVerifier [0x00FF0680+560624]\n\t(No symbol) [0x00F1238C]\n\t(No symbol) [0x00F0E268]\n\t(No symbol) [0x00F0E392]\n\t(No symbol) [0x00F010B7]\n\tBaseThreadInitThunk [0x759D00C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]", "trace": "self = <tests.student.test_create_request.CreateRequestTestCase testMethod=test_offer_details>\n\n    def test_offer_details(self):\n        category = \"Music\"\n        subject = \"Guitar\"\n        title = \"I'd like to become a guitar coach\"\n        desc = \"Prefer focus on standard\"\n        language = \"Ukrainian\"\n        price = \"700\"\n        question = \"What staff do I need?\"\n        answer = \"You need a guitar\"\n        (HeaderUnauthorizedComponent(self.driver).click_login_btn()\n         .set_email(ValueProvider.get_student_email())\n         .set_password(ValueProvider.get_student_password())\n         .click_login_button())\n>       (HeaderAuthorizedComponent(self.driver)\n         .get_navigate_links()[0]\n         .click())\n\ntests\\student\\test_create_request.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nSpaceToStudy\\ui\\pages\\header\\navigate_component.py:15: in click\n    self.node.click()\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B4A5748640>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome=116.0.5845.179); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00F737C3+48947]\nE       \t(No symbol) [0x00F08551]\nE       \t(No symbol) [0x00E0C92D]\nE       \t(No symbol) [0x00E0FD62]\nE       \t(No symbol) [0x00E1106A]\nE       \t(No symbol) [0x00E11110]\nE       \t(No symbol) [0x00E3E147]\nE       \t(No symbol) [0x00E3CF4D]\nE       \t(No symbol) [0x00E3B74B]\nE       \t(No symbol) [0x00E3ABA5]\nE       \t(No symbol) [0x00E33420]\nE       \t(No symbol) [0x00E5508C]\nE       \t(No symbol) [0x00E32EB6]\nE       \t(No symbol) [0x00E553E4]\nE       \t(No symbol) [0x00E675DA]\nE       \t(No symbol) [0x00E54E86]\nE       \t(No symbol) [0x00E316C7]\nE       \t(No symbol) [0x00E3284D]\nE       \tGetHandleVerifier [0x011BFDF9+2458985]\nE       \tGetHandleVerifier [0x0120744F+2751423]\nE       \tGetHandleVerifier [0x01201361+2726609]\nE       \tGetHandleVerifier [0x00FF0680+560624]\nE       \t(No symbol) [0x00F1238C]\nE       \t(No symbol) [0x00F0E268]\nE       \t(No symbol) [0x00F0E392]\nE       \t(No symbol) [0x00F010B7]\nE       \tBaseThreadInitThunk [0x759D00C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: StaleElementReferenceException"}, "attachments": [{"name": "log", "source": "e8c70473-9ef5-4f8c-8243-b7fb9f170c4b-attachment.txt", "type": "text/plain"}], "start": 1694175167488, "stop": 1694175208798, "uuid": "0fd80a10-77b2-4c6b-856a-94c04dcf70c0", "historyId": "508f2ca8430ac09c5bc031d0d38666f7", "testCaseId": "508f2ca8430ac09c5bc031d0d38666f7", "fullName": "tests.student.test_create_request.CreateRequestTestCase#test_offer_details", "labels": [{"name": "parentSuite", "value": "tests.student"}, {"name": "suite", "value": "test_create_request"}, {"name": "subSuite", "value": "CreateRequestTestCase"}, {"name": "host", "value": "DESKTOP-EA1E9C6"}, {"name": "thread", "value": "5696-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.student.test_create_request"}]}