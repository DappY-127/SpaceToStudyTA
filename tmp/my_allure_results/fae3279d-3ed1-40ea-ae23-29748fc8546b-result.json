{"name": "test_switched_modals", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h2[contains(text(), 'student')]\"}\n  (Session info: chrome=116.0.5845.179); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x005837C3+48947]\n\t(No symbol) [0x00518551]\n\t(No symbol) [0x0041C92D]\n\t(No symbol) [0x00449E38]\n\t(No symbol) [0x00449EFB]\n\t(No symbol) [0x00442F61]\n\t(No symbol) [0x004650D4]\n\t(No symbol) [0x00442EB6]\n\t(No symbol) [0x004653E4]\n\t(No symbol) [0x004775DA]\n\t(No symbol) [0x00464E86]\n\t(No symbol) [0x004416C7]\n\t(No symbol) [0x0044284D]\n\tGetHandleVerifier [0x007CFDF9+2458985]\n\tGetHandleVerifier [0x0081744F+2751423]\n\tGetHandleVerifier [0x00811361+2726609]\n\tGetHandleVerifier [0x00600680+560624]\n\t(No symbol) [0x0052238C]\n\t(No symbol) [0x0051E268]\n\t(No symbol) [0x0051E392]\n\t(No symbol) [0x005110B7]\n\tBaseThreadInitThunk [0x759D00C9+25]\n\tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]", "trace": "self = <tests.guest.test_home_page.HomePageTestCase testMethod=test_switched_modals>\n\n    def test_switched_modals(self):\n        button_become_a_student_text = (HomePageGuest(self.driver)\n                                        .click_checkbox_how_it_works_block()\n                                        .get_text_button_become_a_student_tutor())\n        self.assertEquals(button_become_a_student_text, \"Become a tutor\")\n        registration_modal = (HomePageGuest(self.driver)\n                              .click_button_become_a_student_tutor())\n>       registration_modal_title = registration_modal.get_title_text()\n\ntests\\guest\\test_home_page.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nSpaceToStudy\\ui\\pages\\sign_up_modal\\sign_up_modal.py:213: in get_title_text\n    self._title = self.node.find_element(*TITLE)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:417: in find_element\n    return self._execute(Command.FIND_CHILD_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001B4A57966D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//h2[contains(text(), 'student')]\"}\nE         (Session info: chrome=116.0.5845.179); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x005837C3+48947]\nE       \t(No symbol) [0x00518551]\nE       \t(No symbol) [0x0041C92D]\nE       \t(No symbol) [0x00449E38]\nE       \t(No symbol) [0x00449EFB]\nE       \t(No symbol) [0x00442F61]\nE       \t(No symbol) [0x004650D4]\nE       \t(No symbol) [0x00442EB6]\nE       \t(No symbol) [0x004653E4]\nE       \t(No symbol) [0x004775DA]\nE       \t(No symbol) [0x00464E86]\nE       \t(No symbol) [0x004416C7]\nE       \t(No symbol) [0x0044284D]\nE       \tGetHandleVerifier [0x007CFDF9+2458985]\nE       \tGetHandleVerifier [0x0081744F+2751423]\nE       \tGetHandleVerifier [0x00811361+2726609]\nE       \tGetHandleVerifier [0x00600680+560624]\nE       \t(No symbol) [0x0052238C]\nE       \t(No symbol) [0x0051E268]\nE       \t(No symbol) [0x0051E392]\nE       \t(No symbol) [0x005110B7]\nE       \tBaseThreadInitThunk [0x759D00C9+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AB7B1E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AB7AEE+238]\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "attachments": [{"name": "log", "source": "9e53e5ef-86e1-41d1-ab59-8176e254641d-attachment.txt", "type": "text/plain"}], "start": 1694174566061, "stop": 1694174613356, "uuid": "ad60d481-fda5-45d9-815d-4205ae25e047", "historyId": "293c8b20bcb9d96e2b2cd61eb829aa3e", "testCaseId": "293c8b20bcb9d96e2b2cd61eb829aa3e", "fullName": "tests.guest.test_home_page.HomePageTestCase#test_switched_modals", "labels": [{"name": "parentSuite", "value": "tests.guest"}, {"name": "suite", "value": "test_home_page"}, {"name": "subSuite", "value": "HomePageTestCase"}, {"name": "host", "value": "DESKTOP-EA1E9C6"}, {"name": "thread", "value": "5696-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.guest.test_home_page"}]}